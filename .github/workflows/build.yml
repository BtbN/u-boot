# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
    - '*-bpi'
    - '*-ci'
    - '*-atf*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install depencies
        run: |
          sudo apt update
          sudo apt install ccache libssl-dev u-boot-tools gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu make python3-pyelftools
          #sudo ln -s $(which mkimage) tools/
          #echo -e "#!/bin/bash -x\nmkimage \$@" >tools/mkimage
          #chmod +x tools/mkimage

      - name: Setup env
        run: |
          echo "DT=$(date +'%Y-%m-%d_%H%M')" >> $GITHUB_ENV
          #echo "UBOOTVER=$(make ubootversion)" >> $GITHUB_ENV
          echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Print env
        run: |
          echo $BRANCH $UBOOTVER $DT

      - name: Setup cache
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache
          restore-keys: ${{ runner.os }}-ccache

      - name: Build for BananaPi-R64
        run: |
          cp u-boot_mt7988.bin u-boot.bin
          echo -e "board=bpi-r64\ndevice=sdmmc" > build.conf
          bash build.sh build
          echo -e "board=bpi-r64\ndevice=emmc" > build.conf
          bash build.sh build
      - name: Build for BananaPi-R3
        run: |
          echo -e "board=bpi-r3\ndevice=sdmmc" > build.conf
          cp u-boot_mt7988.bin u-boot.bin
          bash build.sh build
          echo -e "board=bpi-r3\ndevice=emmc" > build.conf
          bash build.sh build
          echo -e "board=bpi-r3\ndevice=spi-nand" > build.conf
          bash build.sh build
          echo -e "board=bpi-r3\ndevice=nor" > build.conf
          bash build.sh build
      - name: Build for BananaPi-R4
        run: |
          echo -e "board=bpi-r4\ndevice=sdmmc" > build.conf
          cp u-boot_mt7988.bin u-boot.bin
          bash build.sh build
          echo -e "board=bpi-r4\ndevice=emmc" > build.conf
          bash build.sh build
          echo -e "board=bpi-r4\ndevice=spi-nand" > build.conf
          bash build.sh build
